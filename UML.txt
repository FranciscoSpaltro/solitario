@startuml

class solitario.Basura {
  + mostrarUltimasTres(): ArrayList<solitario.Carta>
  + agregarCarta(carta: solitario.Carta): void
}

class solitario.ListaDeCartas {
  + cantidadCartas(): int
  + estaVacia(): boolean
  + extraerUltima(): solitario.Carta
  + verUltima(): solitario.Carta
  + agregarCarta(carta: solitario.Carta): void
  + obtenerCarta(index: int): solitario.Carta
  + extraerUltimasN(n: int): ArrayList<solitario.Carta>
  + cantidadCartasOcultas(): int
  + anexarCartas(cartas: ArrayList<solitario.Carta>): boolean
  + cantidadCartasVisibles(): int
  + darVueltaIndex(n: int): boolean
}

class solitario.Carta {
  - bocaArriba: boolean
  + solitario.Carta(valor: solitario.Valor, palo: solitario.Palo, bocaArriba: boolean)
  + verPalo(): solitario.Palo
  + verValor(): solitario.Valor
  + estaBocaArriba(): boolean
  + darVuelta(): boolean
  + verColor(): solitario.ColorPalo
}

class solitario.Cimiento {
  - id: int
  + solitario.Cimiento(id: int)
  + verId(): int
  + estaCompleto(): boolean
}

enum solitario.ColorPalo {
  ROJO,
  NEGRO
}

class solitario.InvalidMovementException{
}


enum solitario.ErrorAlMover {
  PILA_VACIA_NO_REY,
  ORDEN_NO_DESCENDENTE,
  ORDEN_NO_ASCENDENTE,
  CIMIENTO_VACIO_NO_AS,
  PILA_CARTAS_MISMO_COLOR,
  CARTA_A_MOVER_NO_BOCA_ARRIBA,
  CIMIENTO_CARTAS_DISTINTO_PALO,
  MAZO_VACIO,
  ERROR_DE_PROGRAMA,
  PILAS_VACIA_NO_PUEDE_SACAR_DEL_MAZO,
  PILA_INCOMPLETA_NO_PUEDE_IR_A_CIMIENTO,
  CARTAS_A_MOVER_DISTINTO_PALO,
  PILA_DIFERENTE_PALO_NO_PUEDE_IR_A_CIMIENTO
}

class solitario.Klondike {
  + inicializarJuego(): void
  + reiniciar(): void
  + repartirCartas(mazo: solitario.Mazo): void
  + moverPilaAPila(pilaOrigen: solitario.PilaDelTableau, pilaDestino: solitario.PilaDelTableau, n: int): boolean
  + moverPilaACimiento(pila: solitario.PilaDelTableau, cimiento: solitario.Cimiento): boolean
  + moverBasuraAPila(pila: solitario.PilaDelTableau): boolean
  + moverBasuraACimiento(cimiento: solitario.Cimiento): boolean
  + moverBasuraAMazo(): boolean
  + moverMazoABasura(): boolean
  + moverCimientoAPila(cimiento: solitario.Cimiento, pilaDestino: solitario.PilaDelTableau): boolean
}

abstract class solitario.Spider{
  + inicializarJuego(): void
  + reiniciar(): void
  + repartirCartas(mazo: solitario.Mazo): void
  + moverPilaAPila(pilaOrigen: solitario.PilaDelTableau, pilaDestino: solitario.PilaDelTableau, n: int): boolean
  + moverPilaACimiento(pila: solitario.PilaDelTableau, cimiento: solitario.Cimiento): boolean
}

class SpiderFacil{
}


class SpiderDificil{
}



class solitario.Mazo {
  + mezclar(): void
  + extraerUltima(): solitario.Carta
}

enum solitario.Palo {
  CORAZONES,
  DIAMANTES,
  TREBOLES,
  PICAS
}

class solitario.PilaDelTableau {
  - id: int
}

class solitario.Persistencia {
  + escribirObjeto(OutputStream, Object): void
  + importarObjeto(InputStream): Object
}

abstract class solitario.Solitario {
  - puntos: int
  + inicializarJuego(): void
  + jugadorGano(): boolean
  + reiniciar(): void
  + repartirCartas(mazo: solitario.Mazo): void
  + moverPilaAPila(pilaOrigen: solitario.PilaDelTableau, pilaDestino: solitario.PilaDelTableau, n: int): boolean
  + moverPilaACimiento(pila: solitario.PilaDelTableau, cimiento: solitario.Cimiento): boolean
  + moverBasuraAPila(pila: solitario.PilaDelTableau): boolean
  + moverBasuraACimiento(cimiento: solitario.Cimiento): boolean
  + moverBasuraAMazo(): boolean
  + moverCimientoAPila(cimiento: solitario.Cimiento, pilaDestino: solitario.PilaDelTableau): boolean
  + moverMazoABasura(): boolean
}

enum solitario.Valor {
  AS,
  DOS,
  TRES,
  CUATRO,
  CINCO,
  SEIS,
  SIETE,
  OCHO,
  NUEVE,
  DIEZ,
  JOTA,
  REINA,
  REY
}

enum solitario.Variante {
  KLONDIKE,
  SPIDER
}

class RunTimeException {}

solitario.ListaDeCartas "0" o--> "*" solitario.Carta : lista
solitario.Basura --|> solitario.ListaDeCartas
solitario.Carta *-.-> solitario.Valor
solitario.Carta *-.-> solitario.Palo
solitario.Palo "1" o--> "1" solitario.ColorPalo
solitario.InvalidMovementException "1"*-->"1" solitario.ErrorAlMover : motivo
solitario.InvalidMovementException --|> RunTimeException
solitario.Cimiento --|> solitario.ListaDeCartas
solitario.Klondike --|> solitario.Solitario
solitario.Spider --|> solitario.Solitario
SpiderFacil --|> solitario.Spider
SpiderDificil --|> solitario.Spider
solitario.Mazo --|> solitario.ListaDeCartas
solitario.PilaDelTableau --|> solitario.ListaDeCartas
solitario.Solitario "1"*-->"1" solitario.Variante
solitario.Solitario "1"*-->"1" solitario.Mazo
solitario.Solitario "1"*-->"4" solitario.Cimiento : cimientos
solitario.Solitario "1"*-->"7" solitario.PilaDelTableau :pilasTableau
solitario.Solitario "1"*-->"1" solitario.Basura


@enduml